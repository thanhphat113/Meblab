@model List<Medlab.Models.Blog>
@{
	int currentPage = 0;
}

<div class="relative mt-8 flex items-center gap-2 md:px-8 lg:px-0 lg:mx-32 md:mt-20">
	<input type="text"
		class="flex-1 px-4 py-2 ring-1 ring-slate-400/60 rounded-lg placeholder:text-slate-600 outline-none"
		placeholder="Tìm bài viết bằng tên hoặc chủ đề" />
	<i class="fas fa-search absolute right-4 top-1/2 transform -translate-y-1/2 text-xl"></i>
</div>


@* {/*Hero blog section*/} *@
<div class="grid grid-cols-3 gap-6 mt-8 md:px-8 lg:px-0 lg:mx-32">
	@if (Model != null && Model.Count > 0)
	{
		<div class="grid grid-cols-2 gap-16 col-span-2 bg-slate-100/60 rounded-lg p-8">
			@* {oneBlog && oneBlog.length > 0 ? (
			oneBlog.map((blog, index) => (
			<>
				<div key={index} class="flex flex-col items-start gap-4">
					<div class="p-2 bg-yellow-500 text-white text-xs rounded-lg">{blog.category}</div>
					<h3 class="text-lg font-medium leading-5">{blog.title}</h3>
					<p class="text-slate-600 h-40 overflow-hidden text-ellipsis">
						{renderContentWithHighlight(blog?.content)}
					</p>
					<a href="/blog/:id" class="px-4 py-2 rounded-2xl ring-1 ring-slate-600 text-slate-800">
					Đọc tiếp
					</a>
				</div>
				<img src={`${process.env.REACT_APP_ASP_NET_CORE_APP_URL}${blog.img}`} alt=""
					class="rounded-xl h-full object-cover" />
			</>
			))
			) : (
			<div>blog loading</div>
			)} *@
		</div>
		<div class="">
			<div class="flex items-center ring-1 ring-slate-100/60 rounded-full grid grid-cols-2">
				<button class="text-sm px-4 py-2 rounded-full bg-slate-200/70 text-black">Mới nhất
				</button>
				<button class="text-sm px-4 py-2 rounded-full bg-white text-black">Thịnh hành
				</button>
			</div>
			<div class="flex flex-col gap-4 mt-4 max-h-[350px] overflow-scroll">
				@foreach (var blog in Model)
				{
					<div class="blog-item flex flex-col gap-2">
						<div class="px-2 py-1 bg-yellow-500 text-white text-[10px] rounded-lg w-fit">
							@blog.Category
						</div>
						<div class="grid grid-cols-5">
							<h3 class="text-slate-800 col-span-4">
								@blog.Title
							</h3>
							<span class="flex justify-end">
								<FaArrowRightLong class="text-slate-600 text-right" />
							</span>
						</div>
						<span class="border-b-[0.5px] border-slate-300 mt-2"></span>
					</div>
				}
			</div>
		</div>
	}
	else
	{
		<div>data loading</div>
	}
</div>

@* {/*Blog section*/} *@
<div class="mt-12 md:mt-20 md:px-8 lg:px-0 lg:mx-32">
	<div class="flex items-center justify-between">
		<p class="text-slate-800 text-xl md:text-2xl font-semibold">Tin tức về y khoa</p>
	</div>
	<div class="grid grid-cols-2 md:grid-cols-4 gap-2 mt-4 md:mt-6 ">
		@if (Model != null && Model.Count > 0)
		{
			@foreach (var blog in Model)
			{
				<a href="/tin-tuc/@blog.Id" class="grid-item col-span-1">
					<div>
						<div class="relative">
							<img src={`${process.env.REACT_APP_ASP_NET_CORE_APP_URL}${blog.img}`} alt="hinh anh tin tuc"
								class="rounded-md h-40 w-full object-cover" />
							<div
								class="absolute px-2 py-1 bg-yellow-500 text-white border-white outline outline-offset-0 outline-4 outline-white text-[10px] rounded-md bottom-0 left-0 before:w-[25px] before:h-[25px] before:shadow-curve-bl-4px before:rounded-md before:absolute before:left-0 before:-top-[29px] after:absolute after:w-[25px] after:h-[25px] after:bottom-0 after:-right-[29px] after:shadow-curve-bl-4px after:rounded-md">
								@blog.Category
							</div>
						</div>
						<div class="px-2 py-4 flex flex-col gap-2">
							<div class="flex items-center justify-between">

								<p class="text-blue-500 text-xs">{formateDDMMYYYY(blog.createdAt)}</p>
							</div>
							<h2 class="text-lg font-medium h-8 overflow-hidden text-ellipsis">{blog.title}</h2>
							<p class="text-slate-600 max-h-14 overflow-hidden text-ellipsis">
								{renderContentWithHighlight(blog?.content)}
							</p>
						</div>
					</div>
				</a>
			}
		}
		else
		{
			<div>dataloading</div>
		}
	</div>
	<div class="flex items-center justify-between mt-6">
		<button class="flex items-center px-4 py-2 text-sm text-gray-700 capitalize transition-colors duration-200
			bg-white border rounded-md gap-x-2 hover:bg-gray-100 dark:bg-gray-900 dark:text-gray-200
			dark:border-gray-700 dark:hover:bg-gray-800">
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
				stroke="currentColor" class="w-5 h-5 rtl:-scale-x-100">
				<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 15.75L3 12m0 0l3.75-3.75M3 12h18" />
			</svg>

			<span class="text-sm">
				Trước
			</span>
		</button>

		<div class="items-center hidden md:flex gap-x-3">
			<div class="text-sm text-gray-500">
				Trang <span class="font-medium text-gray-700">@currentPage / {totalPages}</span>
			</div>
		</div>

		<button class="flex items-center px-4 py-2 text-sm text-gray-700 capitalize transition-colors duration-200
			bg-white border rounded-md gap-x-2 hover:bg-gray-100 dark:bg-gray-900 dark:text-gray-200
			dark:border-gray-700 dark:hover:bg-gray-800">
			<span class="text-sm">
				Kế tiếp
			</span>

			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
				stroke="currentColor" class="w-5 h-5 rtl:-scale-x-100">
				<path stroke-linecap="round" stroke-linejoin="round" d="M17.25 8.25L21 12m0 0l-3.75 3.75M21 12H3" />
			</svg>
		</button>
	</div>
</div>